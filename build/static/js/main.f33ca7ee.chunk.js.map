{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","photoURL","IconButton","SearchOutlined","placeholder","type","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","AttachFile","displayName","onChange","e","target","preventDefault","FieldValue","serverTimestamp","actionTypes","state","action","console","log","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f33ca7ee.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDC_WHDbv5S6lrySMOgcSZ9k_I4XEKVS1Y\",\r\n    authDomain: \"whats-app-clone-a7d13.firebaseapp.com\",\r\n    projectId: \"whats-app-clone-a7d13\",\r\n    storageBucket: \"whats-app-clone-a7d13.appspot.com\",\r\n    messagingSenderId: \"915942040196\",\r\n    appId: \"1:915942040196:web:15a38e6cc29f98d223d8d1\",\r\n    measurementId: \"G-LW23MR49HM\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\nexport default db;","import React,{ useEffect, useState } from 'react';\r\nimport { Avatar } from '@material-ui/core';\r\nimport './SidebarChat.css';\r\nimport db from \"./firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SidebarChat({ id,name, addNewChat }) {\r\n\r\n    const [seed,setSeed] = useState('');\r\n    const [messages, setMessages] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            db.collection('rooms')\r\n            .doc(id).collection('messages')\r\n            .orderBy('timestamp','desc')\r\n            .onSnapshot((snapshot) => \r\n                setMessages(snapshot.docs\r\n                    .map((doc) => doc\r\n                    .data()))\r\n            );\r\n        }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000))\r\n\r\n    },[]);\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Please enter name for chat\");\r\n\r\n        if (roomName){\r\n            // do some clever database stuff...\r\n            db.collection(\"rooms\").add({\r\n                name: roomName,\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    return !addNewChat ? (\r\n        <Link to={`/rooms/${id}`}>\r\n            <div className='sidebarChat'>\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n                <div className=\"sidebarChat__info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{messages[0]?.message}</p>\r\n                </div>\r\n\r\n            </div>\r\n        </Link>\r\n        \r\n    ): (\r\n        <div onClick={createChat} className=\"sidebarChat\">\r\n            <h2>Add new Chat </h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SidebarChat\r\n","import React,{createContext, useContext,useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, \r\ninitialState,children }) => (\r\n <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n</StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React, { useEffect, useState } from 'react'; \r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { SearchOutlined } from \"@material-ui/icons\";\r\nimport \"./Sidebar.css\";\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport db from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\n\r\nfunction Sidebar() {\r\n\r\n    const [rooms,setRooms] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue();\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection('rooms').onSnapshot(snapshot =>(\r\n            setRooms(snapshot.docs.map(doc => \r\n                ({\r\n                    id:doc.id,\r\n                    data:doc.data(),\r\n                }) ))\r\n        ))\r\n\r\n    }, [])\r\n\r\n\r\n        return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__header\">\r\n                <Avatar src={user?.photoURL} />\r\n                <div className=\"sidebar__headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__search\">\r\n                <div className=\"sidebar__searchContainer\">\r\n                    <SearchOutlined />\r\n                    <input placeholder=\"Search\" type=\"text\" />\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className=\"sidebar__chats\" >\r\n                <SidebarChat addNewChat/>\r\n                {rooms.map( room => (\r\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n                ))}\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default Sidebar\r\n","import { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, MoreVert, SearchOutlined } from \"@material-ui/icons\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./Chat.css\";\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Chat() {\r\n \r\n    const [input,setInput] = useState(\"\");\r\n    const [seed, setSeed] = useState(\"\");\r\n    const { roomId } = useParams();\r\n    const [ roomName, setRoomName ] = useState(\"\");\r\n    const [messages,setMessages] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        if (roomId){\r\n            db.collection(\"rooms\").doc(roomId).onSnapshot((snapshot) => setRoomName(snapshot.data().name));\r\n\r\n\r\n            db.collection('rooms').doc(roomId).collection('messages').orderBy('timestamp','asc').onSnapshot(snapshot => \r\n                (\r\n                    setMessages(snapshot.docs.map(doc =>\r\n                     doc.data()))));\r\n        }\r\n\r\n    }, [roomId]);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n\r\n    }, [roomId]);\r\n\r\n    const sendMessage = (e) =>{\r\n        e.preventDefault();\r\n\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message:input,\r\n            name:user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n\r\n        setInput(\"\");\r\n\r\n \r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>Last seen {\" \"} {new Date(messages[messages.length - 1]?.timestamp?.toDate()).toUTCString()}</p>\r\n                </div>\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                        </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"chat__body\">\r\n                {messages.map(message => (\r\n                    <p className={`chat__message ${message.name == user.displayName && 'chat__receiver'}`}>\r\n                        <span className=\"chat__name\">{message.name}</span>\r\n                        {message.message}\r\n                        <span className=\"chat__timestamp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span></p>\r\n                ))}\r\n                \r\n                \r\n                \r\n            </div>\r\n\r\n            <div className=\"chat__footer\">\r\n                <InsertEmoticonIcon />\r\n                <form>\r\n                    <input value={input}  onChange={(e) => setInput(e.target.value)}placeholder=\"Type a message\" type=\"text\"/>\r\n                    <button onClick={sendMessage} type=\"submit\">Send a message</button>\r\n                </form>\r\n                <MicIcon />\r\n                           \r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n","\r\n\r\n\r\nexport const initialState = {\r\n    user:null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state,action)=>{\r\n    console.log(action);\r\n    switch (action.type){\r\n    case actionTypes.SET_USER:\r\n    return {\r\n        ...state,\r\n        user: action.user,\r\n    };\r\n    default: \r\n    return state;\r\n   }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport { Button } from \"@material-ui/core\"; \r\nimport \"./Login.css\";\r\nimport { auth,provider } from \"./firebase\";\r\nimport { actionTypes } from './reducer';\r\nimport { useStateValue } from \"./StateProvider\";\r\nfunction Login() {\r\n\r\n    const [{}, dispatch] = useStateValue();\r\n    const signIn = () => {\r\n         auth\r\n         .signInWithPopup(provider)\r\n        .then((result) => {\r\n            dispatch({\r\n                type:actionTypes.SET_USER,\r\n                user:result.user,\r\n            });\r\n        })\r\n        .catch((error) => alert(error.message));\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\" \r\n                />\r\n                <div className=\"login__text\">\r\n                    <h1>Sign in to Whatsaspp</h1>\r\n                </div>\r\n                <Button onClick={signIn}>\r\n                    Sign In With Google\r\n                </Button>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\nimport './App.css';\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\"; \nimport Login from \"./Login\";\nimport { BrowserRouter as Router, Switch,Route} from \"react-router-dom\";\nimport {useStateValue } from \"./StateProvider\";\n\nfunction App() {\n  const [{user},dispatch] = useStateValue();\n  return (\n    //I'm uisng BEM naming convention\n    <div className=\"App\">\n\n      {!user ? (\n        <Login />\n      ):(\n      <div className=\"app__body\">\n        <Router>\n\n          <Sidebar />\n          <Switch>\n\n            <Route path=\"/rooms/:roomId\">\n              <Chat />\n            </Route>\n            <Route path=\"/\">\n              <Chat />\n            </Route>\n\n          </Switch>\n        </Router>\n\n      </div>\n      )}\n      \n     \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducer, { initialState } from \"./reducer\";\nimport { StateProvider } from \"./StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState}reducer={reducer}>\n      <App />\n    </StateProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}